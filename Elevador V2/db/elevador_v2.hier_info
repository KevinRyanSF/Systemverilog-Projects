|DE1_SOC_golden_top
ADC_CONVST << <GND>
ADC_DIN << <GND>
ADC_DOUT => ~NO_FANOUT~
ADC_SCLK << <GND>
AUD_ADCDAT => ~NO_FANOUT~
AUD_ADCLRCK <> <UNC>
AUD_BCLK <> <UNC>
AUD_DACDAT << <GND>
AUD_DACLRCK <> <UNC>
AUD_XCK << <GND>
CLOCK2_50 => CLOCK2_50.IN1
CLOCK3_50 => ~NO_FANOUT~
CLOCK4_50 => ~NO_FANOUT~
CLOCK_50 => ~NO_FANOUT~
DRAM_ADDR[0] << <GND>
DRAM_ADDR[1] << <GND>
DRAM_ADDR[2] << <GND>
DRAM_ADDR[3] << <GND>
DRAM_ADDR[4] << <GND>
DRAM_ADDR[5] << <GND>
DRAM_ADDR[6] << <GND>
DRAM_ADDR[7] << <GND>
DRAM_ADDR[8] << <GND>
DRAM_ADDR[9] << <GND>
DRAM_ADDR[10] << <GND>
DRAM_ADDR[11] << <GND>
DRAM_ADDR[12] << <GND>
DRAM_BA[0] << <GND>
DRAM_BA[1] << <GND>
DRAM_CAS_N << <GND>
DRAM_CKE << <GND>
DRAM_CLK << <GND>
DRAM_CS_N << <GND>
DRAM_DQ[0] <> <UNC>
DRAM_DQ[1] <> <UNC>
DRAM_DQ[2] <> <UNC>
DRAM_DQ[3] <> <UNC>
DRAM_DQ[4] <> <UNC>
DRAM_DQ[5] <> <UNC>
DRAM_DQ[6] <> <UNC>
DRAM_DQ[7] <> <UNC>
DRAM_DQ[8] <> <UNC>
DRAM_DQ[9] <> <UNC>
DRAM_DQ[10] <> <UNC>
DRAM_DQ[11] <> <UNC>
DRAM_DQ[12] <> <UNC>
DRAM_DQ[13] <> <UNC>
DRAM_DQ[14] <> <UNC>
DRAM_DQ[15] <> <UNC>
DRAM_LDQM << <GND>
DRAM_RAS_N << <GND>
DRAM_UDQM << <GND>
DRAM_WE_N << <GND>
FAN_CTRL << <GND>
FPGA_I2C_SCLK << <GND>
FPGA_I2C_SDAT <> <UNC>
GPIO_0[0] <> elevador:elevadorA.bi1
GPIO_0[1] <> elevador:elevadorA.bi2
GPIO_0[2] <> elevador:elevadorA.bi3
GPIO_0[3] <> elevador:elevadorA.bi4
GPIO_0[4] <> elevador:elevadorA.bi5
GPIO_0[5] <> elevador:elevadorB.bi1
GPIO_0[6] <> elevador:elevadorB.bi2
GPIO_0[7] <> elevador:elevadorB.bi3
GPIO_0[8] <> elevador:elevadorB.bi4
GPIO_0[9] <> elevador:elevadorB.bi5
GPIO_0[10] <> <UNC>
GPIO_0[11] <> <UNC>
GPIO_0[12] <> <UNC>
GPIO_0[13] <> <UNC>
GPIO_0[14] <> <UNC>
GPIO_0[15] <> <UNC>
GPIO_0[16] <> <UNC>
GPIO_0[17] <> <UNC>
GPIO_0[18] <> <UNC>
GPIO_0[19] <> <UNC>
GPIO_0[20] <> <UNC>
GPIO_0[21] <> <UNC>
GPIO_0[22] <> <UNC>
GPIO_0[23] <> <UNC>
GPIO_0[24] <> <UNC>
GPIO_0[25] <> <UNC>
GPIO_0[26] <> <UNC>
GPIO_0[27] <> <UNC>
GPIO_0[28] <> <UNC>
GPIO_0[29] <> <UNC>
GPIO_0[30] <> <UNC>
GPIO_0[31] <> <UNC>
GPIO_0[32] <> <UNC>
GPIO_0[33] <> <UNC>
GPIO_0[34] <> <UNC>
GPIO_0[35] <> <UNC>
GPIO_1[0] <> controladora:mycontroladora.be1Up
GPIO_1[1] <> controladora:mycontroladora.be2Up
GPIO_1[2] <> controladora:mycontroladora.be2Down
GPIO_1[3] <> controladora:mycontroladora.be3Up
GPIO_1[4] <> controladora:mycontroladora.be3Down
GPIO_1[5] <> controladora:mycontroladora.be4Up
GPIO_1[6] <> controladora:mycontroladora.be4Down
GPIO_1[7] <> controladora:mycontroladora.be5Down
GPIO_1[8] <> controladora:mycontroladora.l1Up
GPIO_1[9] <> controladora:mycontroladora.l2Up
GPIO_1[10] <> controladora:mycontroladora.l2Down
GPIO_1[11] <> controladora:mycontroladora.l3Up
GPIO_1[12] <> controladora:mycontroladora.l3Down
GPIO_1[13] <> controladora:mycontroladora.l4Up
GPIO_1[14] <> controladora:mycontroladora.l4Down
GPIO_1[15] <> controladora:mycontroladora.l5Down
GPIO_1[16] <> <UNC>
GPIO_1[17] <> <UNC>
GPIO_1[18] <> <UNC>
GPIO_1[19] <> <UNC>
GPIO_1[20] <> <UNC>
GPIO_1[21] <> <UNC>
GPIO_1[22] <> <UNC>
GPIO_1[23] <> <UNC>
GPIO_1[24] <> <UNC>
GPIO_1[25] <> <UNC>
GPIO_1[26] <> <UNC>
GPIO_1[27] <> <UNC>
GPIO_1[28] <> <UNC>
GPIO_1[29] <> <UNC>
GPIO_1[30] <> <UNC>
GPIO_1[31] <> <UNC>
GPIO_1[32] <> <UNC>
GPIO_1[33] <> <UNC>
GPIO_1[34] <> <UNC>
GPIO_1[35] <> <UNC>
HEX0[0] << elevador:elevadorA.displayInterno
HEX0[1] << elevador:elevadorA.displayInterno
HEX0[2] << elevador:elevadorA.displayInterno
HEX0[3] << elevador:elevadorA.displayInterno
HEX0[4] << elevador:elevadorA.displayInterno
HEX0[5] << elevador:elevadorA.displayInterno
HEX0[6] << elevador:elevadorA.displayInterno
HEX1[0] << elevador:elevadorB.displayInterno
HEX1[1] << elevador:elevadorB.displayInterno
HEX1[2] << elevador:elevadorB.displayInterno
HEX1[3] << elevador:elevadorB.displayInterno
HEX1[4] << elevador:elevadorB.displayInterno
HEX1[5] << elevador:elevadorB.displayInterno
HEX1[6] << elevador:elevadorB.displayInterno
HEX2[0] << <VCC>
HEX2[1] << <VCC>
HEX2[2] << <VCC>
HEX2[3] << <VCC>
HEX2[4] << <VCC>
HEX2[5] << <VCC>
HEX2[6] << <VCC>
HEX3[0] << <VCC>
HEX3[1] << <VCC>
HEX3[2] << <VCC>
HEX3[3] << <VCC>
HEX3[4] << <VCC>
HEX3[5] << <VCC>
HEX3[6] << <VCC>
HEX4[0] << controladora:mycontroladora.displayInternoA
HEX4[1] << controladora:mycontroladora.displayInternoA
HEX4[2] << controladora:mycontroladora.displayInternoA
HEX4[3] << controladora:mycontroladora.displayInternoA
HEX4[4] << controladora:mycontroladora.displayInternoA
HEX4[5] << controladora:mycontroladora.displayInternoA
HEX4[6] << controladora:mycontroladora.displayInternoA
HEX5[0] << controladora:mycontroladora.displayInternoB
HEX5[1] << controladora:mycontroladora.displayInternoB
HEX5[2] << controladora:mycontroladora.displayInternoB
HEX5[3] << controladora:mycontroladora.displayInternoB
HEX5[4] << controladora:mycontroladora.displayInternoB
HEX5[5] << controladora:mycontroladora.displayInternoB
HEX5[6] << controladora:mycontroladora.displayInternoB
IRDA_RXD => ~NO_FANOUT~
IRDA_TXD << <GND>
KEY[0] => _.IN1
KEY[0] => _.IN1
KEY[0] => _.IN1
KEY[0] => _.IN1
KEY[0] => _.IN1
KEY[0] => _.IN1
KEY[1] => ~NO_FANOUT~
KEY[2] => ~NO_FANOUT~
KEY[3] => ~NO_FANOUT~
LEDR[0] << elevador:elevadorA.port1
LEDR[1] << elevador:elevadorA.port2
LEDR[2] << elevador:elevadorA.port3
LEDR[3] << elevador:elevadorA.port4
LEDR[4] << elevador:elevadorA.port5
LEDR[5] << elevador:elevadorB.port1
LEDR[6] << elevador:elevadorB.port2
LEDR[7] << elevador:elevadorB.port3
LEDR[8] << elevador:elevadorB.port4
LEDR[9] << elevador:elevadorB.port5
PS2_CLK <> <UNC>
PS2_CLK2 <> <UNC>
PS2_DAT <> <UNC>
PS2_DAT2 <> <UNC>
SW[0] => SW[0].IN1
SW[1] => SW[1].IN1
SW[2] => ~NO_FANOUT~
SW[3] => ~NO_FANOUT~
SW[4] => ~NO_FANOUT~
SW[5] => ~NO_FANOUT~
SW[6] => ~NO_FANOUT~
SW[7] => ~NO_FANOUT~
SW[8] => ~NO_FANOUT~
SW[9] => ~NO_FANOUT~
TD_CLK27 => ~NO_FANOUT~
TD_DATA[0] => ~NO_FANOUT~
TD_DATA[1] => ~NO_FANOUT~
TD_DATA[2] => ~NO_FANOUT~
TD_DATA[3] => ~NO_FANOUT~
TD_DATA[4] => ~NO_FANOUT~
TD_DATA[5] => ~NO_FANOUT~
TD_DATA[6] => ~NO_FANOUT~
TD_DATA[7] => ~NO_FANOUT~
TD_HS => ~NO_FANOUT~
TD_RESET_N << <GND>
TD_VS => ~NO_FANOUT~
VGA_B[0] << <GND>
VGA_B[1] << <GND>
VGA_B[2] << <GND>
VGA_B[3] << <GND>
VGA_B[4] << <GND>
VGA_B[5] << <GND>
VGA_B[6] << <GND>
VGA_B[7] << <GND>
VGA_BLANK_N << <GND>
VGA_CLK << <GND>
VGA_G[0] << <GND>
VGA_G[1] << <GND>
VGA_G[2] << <GND>
VGA_G[3] << <GND>
VGA_G[4] << <GND>
VGA_G[5] << <GND>
VGA_G[6] << <GND>
VGA_G[7] << <GND>
VGA_HS << <GND>
VGA_R[0] << <GND>
VGA_R[1] << <GND>
VGA_R[2] << <GND>
VGA_R[3] << <GND>
VGA_R[4] << <GND>
VGA_R[5] << <GND>
VGA_R[6] << <GND>
VGA_R[7] << <GND>
VGA_SYNC_N << <GND>
VGA_VS << <GND>


|DE1_SOC_golden_top|divfreq:div
reset => clk_i~reg0.ACLR
reset => contador[0].ACLR
reset => contador[1].ACLR
reset => contador[2].ACLR
reset => contador[3].ACLR
reset => contador[4].ACLR
reset => contador[5].ACLR
reset => contador[6].ACLR
reset => contador[7].ACLR
reset => contador[8].ACLR
reset => contador[9].ACLR
reset => contador[10].ACLR
reset => contador[11].ACLR
reset => contador[12].ACLR
reset => contador[13].ACLR
reset => contador[14].ACLR
reset => contador[15].ACLR
reset => contador[16].ACLR
reset => contador[17].ACLR
reset => contador[18].ACLR
reset => contador[19].ACLR
reset => contador[20].ACLR
reset => contador[21].ACLR
reset => contador[22].ACLR
reset => contador[23].ACLR
reset => contador[24].ACLR
reset => contador[25].ACLR
reset => contador[26].ACLR
reset => contador[27].ACLR
reset => contador[28].ACLR
reset => contador[29].ACLR
reset => contador[30].ACLR
reset => contador[31].ACLR
clock => clk_i~reg0.CLK
clock => contador[0].CLK
clock => contador[1].CLK
clock => contador[2].CLK
clock => contador[3].CLK
clock => contador[4].CLK
clock => contador[5].CLK
clock => contador[6].CLK
clock => contador[7].CLK
clock => contador[8].CLK
clock => contador[9].CLK
clock => contador[10].CLK
clock => contador[11].CLK
clock => contador[12].CLK
clock => contador[13].CLK
clock => contador[14].CLK
clock => contador[15].CLK
clock => contador[16].CLK
clock => contador[17].CLK
clock => contador[18].CLK
clock => contador[19].CLK
clock => contador[20].CLK
clock => contador[21].CLK
clock => contador[22].CLK
clock => contador[23].CLK
clock => contador[24].CLK
clock => contador[25].CLK
clock => contador[26].CLK
clock => contador[27].CLK
clock => contador[28].CLK
clock => contador[29].CLK
clock => contador[30].CLK
clock => contador[31].CLK
clk_i <= clk_i~reg0.DB_MAX_OUTPUT_PORT_TYPE


|DE1_SOC_golden_top|elevador:elevadorA
reset => always1.IN1
reset => always2.IN1
reset => always3.IN1
reset => always4.IN1
reset => always5.IN1
reset => always6.IN1
reset => always7.IN1
reset => always8.IN1
reset => always9.IN1
reset => always10.IN1
reset => alerta~reg0.ACLR
reset => estado[0].ACLR
reset => estado[1].ACLR
reset => estado[2].ACLR
reset => estado[3].ACLR
reset => sp5.PRESET
reset => sp4.PRESET
reset => sp3.PRESET
reset => sp2.PRESET
reset => sp1.PRESET
reset => port5~reg0.ACLR
reset => port4~reg0.ACLR
reset => port3~reg0.ACLR
reset => port2~reg0.ACLR
reset => port1~reg0.ACLR
reset => cont[0].ACLR
reset => cont[1].ACLR
reset => cont[2].ACLR
reset => cont[3].ACLR
reset => cont[4].ACLR
reset => cont[5].ACLR
reset => cont[6].ACLR
reset => cont[7].ACLR
reset => cont[8].ACLR
reset => cont[9].ACLR
reset => cont[10].ACLR
reset => cont[11].ACLR
reset => cont[12].ACLR
reset => cont[13].ACLR
reset => cont[14].ACLR
reset => cont[15].ACLR
reset => cont[16].ACLR
reset => cont[17].ACLR
reset => cont[18].ACLR
reset => cont[19].ACLR
reset => cont[20].ACLR
reset => cont[21].ACLR
reset => cont[22].ACLR
reset => cont[23].ACLR
reset => cont[24].ACLR
reset => cont[25].ACLR
reset => cont[26].ACLR
reset => cont[27].ACLR
reset => cont[28].ACLR
reset => cont[29].ACLR
reset => cont[30].ACLR
reset => cont[31].ACLR
reset => sentidoMotor[0]~reg0.ACLR
reset => sentidoMotor[1]~reg0.PRESET
reset => motor[0]~reg0.ACLR
reset => motor[1]~reg0.PRESET
reset => elev_parado~4.DATAIN
clock => alerta~reg0.CLK
clock => estado[0].CLK
clock => estado[1].CLK
clock => estado[2].CLK
clock => estado[3].CLK
clock => sp5.CLK
clock => sp4.CLK
clock => sp3.CLK
clock => sp2.CLK
clock => sp1.CLK
clock => port5~reg0.CLK
clock => port4~reg0.CLK
clock => port3~reg0.CLK
clock => port2~reg0.CLK
clock => port1~reg0.CLK
clock => cont[0].CLK
clock => cont[1].CLK
clock => cont[2].CLK
clock => cont[3].CLK
clock => cont[4].CLK
clock => cont[5].CLK
clock => cont[6].CLK
clock => cont[7].CLK
clock => cont[8].CLK
clock => cont[9].CLK
clock => cont[10].CLK
clock => cont[11].CLK
clock => cont[12].CLK
clock => cont[13].CLK
clock => cont[14].CLK
clock => cont[15].CLK
clock => cont[16].CLK
clock => cont[17].CLK
clock => cont[18].CLK
clock => cont[19].CLK
clock => cont[20].CLK
clock => cont[21].CLK
clock => cont[22].CLK
clock => cont[23].CLK
clock => cont[24].CLK
clock => cont[25].CLK
clock => cont[26].CLK
clock => cont[27].CLK
clock => cont[28].CLK
clock => cont[29].CLK
clock => cont[30].CLK
clock => cont[31].CLK
clock => sentidoMotor[0]~reg0.CLK
clock => sentidoMotor[1]~reg0.CLK
clock => motor[0]~reg0.CLK
clock => motor[1]~reg0.CLK
clock => elev_parado~2.DATAIN
noStopIn => always1.IN1
noStopIn => always3.IN1
noStopIn => always5.IN1
noStopIn => always7.IN1
noStopIn => always9.IN1
noStopIn => noStopOut.DATAIN
bi1 => l1.IN1
bi2 => l2.IN1
bi3 => l3.IN1
bi4 => l4.IN1
bi5 => l5.IN1
be1 => e1.CLK
be2 => e2.CLK
be3 => e3.CLK
be4 => e4.CLK
be5 => e5.CLK
s1 => always0.IN1
s1 => Decoder0.IN0
s2 => always0.IN1
s2 => Decoder0.IN1
s3 => always0.IN1
s3 => Decoder0.IN2
s4 => always0.IN1
s4 => Decoder0.IN3
s5 => always0.IN1
s5 => Decoder0.IN4
motor[0] <= motor[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
motor[1] <= motor[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sentidoMotor[0] <= sentidoMotor[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sentidoMotor[1] <= sentidoMotor[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
port1 <= port1~reg0.DB_MAX_OUTPUT_PORT_TYPE
port2 <= port2~reg0.DB_MAX_OUTPUT_PORT_TYPE
port3 <= port3~reg0.DB_MAX_OUTPUT_PORT_TYPE
port4 <= port4~reg0.DB_MAX_OUTPUT_PORT_TYPE
port5 <= port5~reg0.DB_MAX_OUTPUT_PORT_TYPE
l1 <= l1~reg0.DB_MAX_OUTPUT_PORT_TYPE
l2 <= l2~reg0.DB_MAX_OUTPUT_PORT_TYPE
l3 <= l3~reg0.DB_MAX_OUTPUT_PORT_TYPE
l4 <= l4~reg0.DB_MAX_OUTPUT_PORT_TYPE
l5 <= l5~reg0.DB_MAX_OUTPUT_PORT_TYPE
displayInterno[0] <= displayInterno[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
displayInterno[1] <= displayInterno[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
displayInterno[2] <= displayInterno[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
displayInterno[3] <= displayInterno[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
displayInterno[4] <= displayInterno[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
displayInterno[5] <= displayInterno[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
displayInterno[6] <= displayInterno[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
alerta <= alerta~reg0.DB_MAX_OUTPUT_PORT_TYPE
noStopOut <= noStopIn.DB_MAX_OUTPUT_PORT_TYPE


|DE1_SOC_golden_top|elevador:elevadorB
reset => always1.IN1
reset => always2.IN1
reset => always3.IN1
reset => always4.IN1
reset => always5.IN1
reset => always6.IN1
reset => always7.IN1
reset => always8.IN1
reset => always9.IN1
reset => always10.IN1
reset => alerta~reg0.ACLR
reset => estado[0].ACLR
reset => estado[1].ACLR
reset => estado[2].ACLR
reset => estado[3].ACLR
reset => sp5.PRESET
reset => sp4.PRESET
reset => sp3.PRESET
reset => sp2.PRESET
reset => sp1.PRESET
reset => port5~reg0.ACLR
reset => port4~reg0.ACLR
reset => port3~reg0.ACLR
reset => port2~reg0.ACLR
reset => port1~reg0.ACLR
reset => cont[0].ACLR
reset => cont[1].ACLR
reset => cont[2].ACLR
reset => cont[3].ACLR
reset => cont[4].ACLR
reset => cont[5].ACLR
reset => cont[6].ACLR
reset => cont[7].ACLR
reset => cont[8].ACLR
reset => cont[9].ACLR
reset => cont[10].ACLR
reset => cont[11].ACLR
reset => cont[12].ACLR
reset => cont[13].ACLR
reset => cont[14].ACLR
reset => cont[15].ACLR
reset => cont[16].ACLR
reset => cont[17].ACLR
reset => cont[18].ACLR
reset => cont[19].ACLR
reset => cont[20].ACLR
reset => cont[21].ACLR
reset => cont[22].ACLR
reset => cont[23].ACLR
reset => cont[24].ACLR
reset => cont[25].ACLR
reset => cont[26].ACLR
reset => cont[27].ACLR
reset => cont[28].ACLR
reset => cont[29].ACLR
reset => cont[30].ACLR
reset => cont[31].ACLR
reset => sentidoMotor[0]~reg0.ACLR
reset => sentidoMotor[1]~reg0.PRESET
reset => motor[0]~reg0.ACLR
reset => motor[1]~reg0.PRESET
reset => elev_parado~4.DATAIN
clock => alerta~reg0.CLK
clock => estado[0].CLK
clock => estado[1].CLK
clock => estado[2].CLK
clock => estado[3].CLK
clock => sp5.CLK
clock => sp4.CLK
clock => sp3.CLK
clock => sp2.CLK
clock => sp1.CLK
clock => port5~reg0.CLK
clock => port4~reg0.CLK
clock => port3~reg0.CLK
clock => port2~reg0.CLK
clock => port1~reg0.CLK
clock => cont[0].CLK
clock => cont[1].CLK
clock => cont[2].CLK
clock => cont[3].CLK
clock => cont[4].CLK
clock => cont[5].CLK
clock => cont[6].CLK
clock => cont[7].CLK
clock => cont[8].CLK
clock => cont[9].CLK
clock => cont[10].CLK
clock => cont[11].CLK
clock => cont[12].CLK
clock => cont[13].CLK
clock => cont[14].CLK
clock => cont[15].CLK
clock => cont[16].CLK
clock => cont[17].CLK
clock => cont[18].CLK
clock => cont[19].CLK
clock => cont[20].CLK
clock => cont[21].CLK
clock => cont[22].CLK
clock => cont[23].CLK
clock => cont[24].CLK
clock => cont[25].CLK
clock => cont[26].CLK
clock => cont[27].CLK
clock => cont[28].CLK
clock => cont[29].CLK
clock => cont[30].CLK
clock => cont[31].CLK
clock => sentidoMotor[0]~reg0.CLK
clock => sentidoMotor[1]~reg0.CLK
clock => motor[0]~reg0.CLK
clock => motor[1]~reg0.CLK
clock => elev_parado~2.DATAIN
noStopIn => always1.IN1
noStopIn => always3.IN1
noStopIn => always5.IN1
noStopIn => always7.IN1
noStopIn => always9.IN1
noStopIn => noStopOut.DATAIN
bi1 => l1.IN1
bi2 => l2.IN1
bi3 => l3.IN1
bi4 => l4.IN1
bi5 => l5.IN1
be1 => e1.CLK
be2 => e2.CLK
be3 => e3.CLK
be4 => e4.CLK
be5 => e5.CLK
s1 => always0.IN1
s1 => Decoder0.IN0
s2 => always0.IN1
s2 => Decoder0.IN1
s3 => always0.IN1
s3 => Decoder0.IN2
s4 => always0.IN1
s4 => Decoder0.IN3
s5 => always0.IN1
s5 => Decoder0.IN4
motor[0] <= motor[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
motor[1] <= motor[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sentidoMotor[0] <= sentidoMotor[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sentidoMotor[1] <= sentidoMotor[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
port1 <= port1~reg0.DB_MAX_OUTPUT_PORT_TYPE
port2 <= port2~reg0.DB_MAX_OUTPUT_PORT_TYPE
port3 <= port3~reg0.DB_MAX_OUTPUT_PORT_TYPE
port4 <= port4~reg0.DB_MAX_OUTPUT_PORT_TYPE
port5 <= port5~reg0.DB_MAX_OUTPUT_PORT_TYPE
l1 <= l1~reg0.DB_MAX_OUTPUT_PORT_TYPE
l2 <= l2~reg0.DB_MAX_OUTPUT_PORT_TYPE
l3 <= l3~reg0.DB_MAX_OUTPUT_PORT_TYPE
l4 <= l4~reg0.DB_MAX_OUTPUT_PORT_TYPE
l5 <= l5~reg0.DB_MAX_OUTPUT_PORT_TYPE
displayInterno[0] <= displayInterno[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
displayInterno[1] <= displayInterno[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
displayInterno[2] <= displayInterno[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
displayInterno[3] <= displayInterno[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
displayInterno[4] <= displayInterno[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
displayInterno[5] <= displayInterno[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
displayInterno[6] <= displayInterno[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
alerta <= alerta~reg0.DB_MAX_OUTPUT_PORT_TYPE
noStopOut <= noStopIn.DB_MAX_OUTPUT_PORT_TYPE


|DE1_SOC_golden_top|controladora:mycontroladora
reset => alertaOutB~reg0.ACLR
reset => alertaOutA~reg0.ACLR
reset => l5Down.IN1
reset => chamadas[7].ativa.IN1
reset => l4Down.IN1
reset => chamadas[6].ativa.IN1
reset => l3Down.IN1
reset => chamadas[4].ativa.IN1
reset => l2Down.IN1
reset => chamadas[2].ativa.IN1
reset => l4Up.IN1
reset => chamadas[5].ativa.IN1
reset => l3Up.IN1
reset => chamadas[3].ativa.IN1
reset => l2Up.IN1
reset => chamadas[1].ativa.IN1
reset => l1Up.IN1
reset => chamadas[0].ativa.IN1
reset => elev_slc.B.OUTPUTSELECT
reset => elev_slc.A.OUTPUTSELECT
reset => current_call_index[0].ACLR
reset => current_call_index[1].ACLR
reset => current_call_index[2].ACLR
reset => current_call_index[3].ACLR
reset => current_call_index[4].ACLR
reset => current_call_index[5].ACLR
reset => current_call_index[6].ACLR
reset => current_call_index[7].ACLR
reset => current_call_index[8].ACLR
reset => current_call_index[9].ACLR
reset => current_call_index[10].ACLR
reset => current_call_index[11].ACLR
reset => current_call_index[12].ACLR
reset => current_call_index[13].ACLR
reset => current_call_index[14].ACLR
reset => current_call_index[15].ACLR
reset => current_call_index[16].ACLR
reset => current_call_index[17].ACLR
reset => current_call_index[18].ACLR
reset => current_call_index[19].ACLR
reset => current_call_index[20].ACLR
reset => current_call_index[21].ACLR
reset => current_call_index[22].ACLR
reset => current_call_index[23].ACLR
reset => current_call_index[24].ACLR
reset => current_call_index[25].ACLR
reset => current_call_index[26].ACLR
reset => current_call_index[27].ACLR
reset => current_call_index[28].ACLR
reset => current_call_index[29].ACLR
reset => current_call_index[30].ACLR
reset => current_call_index[31].ACLR
reset => d_botoes7.ACLR
reset => d_botoes6.ACLR
reset => d_botoes5.ACLR
reset => d_botoes4.ACLR
reset => d_botoes3.ACLR
reset => d_botoes2.ACLR
reset => d_botoes1.ACLR
reset => d_botoes0.ACLR
reset => dispB.ACLR
reset => dispA.ACLR
reset => be5B~reg0.ACLR
reset => be4B~reg0.ACLR
reset => be3B~reg0.ACLR
reset => be2B~reg0.ACLR
reset => be1B~reg0.ACLR
reset => be5A~reg0.ACLR
reset => be4A~reg0.ACLR
reset => be3A~reg0.ACLR
reset => be2A~reg0.ACLR
reset => be1A~reg0.ACLR
reset => d_leds0.ACLR
reset => d_leds1.ACLR
reset => d_leds2.ACLR
reset => d_leds3.ACLR
reset => d_leds4.ACLR
reset => d_leds5.ACLR
reset => d_leds6.ACLR
reset => d_leds7.ACLR
reset => sub_verifica~8.DATAIN
reset => control~8.DATAIN
reset => andar_call[3].ENA
reset => andar_call[2].ENA
reset => andar_call[1].ENA
reset => andar_call[0].ENA
reset => sentido_call[1].ENA
reset => sentido_call[0].ENA
reset => distanciaA[31].ENA
reset => distanciaA[30].ENA
reset => distanciaA[29].ENA
reset => distanciaA[28].ENA
reset => distanciaA[27].ENA
reset => distanciaA[26].ENA
reset => distanciaA[25].ENA
reset => distanciaA[24].ENA
reset => distanciaA[23].ENA
reset => distanciaA[22].ENA
reset => distanciaA[21].ENA
reset => distanciaA[20].ENA
reset => distanciaA[19].ENA
reset => distanciaA[18].ENA
reset => distanciaA[17].ENA
reset => distanciaA[16].ENA
reset => distanciaA[15].ENA
reset => distanciaA[14].ENA
reset => distanciaA[13].ENA
reset => distanciaA[12].ENA
reset => distanciaA[11].ENA
reset => distanciaA[10].ENA
reset => distanciaA[9].ENA
reset => distanciaA[8].ENA
reset => distanciaA[7].ENA
reset => distanciaA[6].ENA
reset => distanciaA[5].ENA
reset => distanciaA[4].ENA
reset => distanciaA[3].ENA
reset => distanciaA[2].ENA
reset => distanciaA[1].ENA
reset => distanciaA[0].ENA
reset => distanciaB[31].ENA
reset => distanciaB[30].ENA
reset => distanciaB[29].ENA
reset => distanciaB[28].ENA
reset => distanciaB[27].ENA
reset => distanciaB[26].ENA
reset => distanciaB[25].ENA
reset => distanciaB[24].ENA
reset => distanciaB[23].ENA
reset => distanciaB[22].ENA
reset => distanciaB[21].ENA
reset => distanciaB[20].ENA
reset => distanciaB[19].ENA
reset => distanciaB[18].ENA
reset => distanciaB[17].ENA
reset => distanciaB[16].ENA
reset => distanciaB[15].ENA
reset => distanciaB[14].ENA
reset => distanciaB[13].ENA
reset => distanciaB[12].ENA
reset => distanciaB[11].ENA
reset => distanciaB[10].ENA
reset => distanciaB[9].ENA
reset => distanciaB[8].ENA
reset => distanciaB[7].ENA
reset => distanciaB[6].ENA
reset => distanciaB[5].ENA
reset => distanciaB[4].ENA
reset => distanciaB[3].ENA
reset => distanciaB[2].ENA
reset => distanciaB[1].ENA
reset => distanciaB[0].ENA
reset => pavimentoA[3].ENA
reset => pavimentoA[2].ENA
reset => pavimentoA[1].ENA
reset => pavimentoA[0].ENA
reset => pavimentoB[3].ENA
reset => pavimentoB[2].ENA
reset => pavimentoB[1].ENA
reset => pavimentoB[0].ENA
clock => pavimentoB[0].CLK
clock => pavimentoB[1].CLK
clock => pavimentoB[2].CLK
clock => pavimentoB[3].CLK
clock => alertaOutB~reg0.CLK
clock => pavimentoA[0].CLK
clock => pavimentoA[1].CLK
clock => pavimentoA[2].CLK
clock => pavimentoA[3].CLK
clock => alertaOutA~reg0.CLK
clock => distanciaB[0].CLK
clock => distanciaB[1].CLK
clock => distanciaB[2].CLK
clock => distanciaB[3].CLK
clock => distanciaB[4].CLK
clock => distanciaB[5].CLK
clock => distanciaB[6].CLK
clock => distanciaB[7].CLK
clock => distanciaB[8].CLK
clock => distanciaB[9].CLK
clock => distanciaB[10].CLK
clock => distanciaB[11].CLK
clock => distanciaB[12].CLK
clock => distanciaB[13].CLK
clock => distanciaB[14].CLK
clock => distanciaB[15].CLK
clock => distanciaB[16].CLK
clock => distanciaB[17].CLK
clock => distanciaB[18].CLK
clock => distanciaB[19].CLK
clock => distanciaB[20].CLK
clock => distanciaB[21].CLK
clock => distanciaB[22].CLK
clock => distanciaB[23].CLK
clock => distanciaB[24].CLK
clock => distanciaB[25].CLK
clock => distanciaB[26].CLK
clock => distanciaB[27].CLK
clock => distanciaB[28].CLK
clock => distanciaB[29].CLK
clock => distanciaB[30].CLK
clock => distanciaB[31].CLK
clock => distanciaA[0].CLK
clock => distanciaA[1].CLK
clock => distanciaA[2].CLK
clock => distanciaA[3].CLK
clock => distanciaA[4].CLK
clock => distanciaA[5].CLK
clock => distanciaA[6].CLK
clock => distanciaA[7].CLK
clock => distanciaA[8].CLK
clock => distanciaA[9].CLK
clock => distanciaA[10].CLK
clock => distanciaA[11].CLK
clock => distanciaA[12].CLK
clock => distanciaA[13].CLK
clock => distanciaA[14].CLK
clock => distanciaA[15].CLK
clock => distanciaA[16].CLK
clock => distanciaA[17].CLK
clock => distanciaA[18].CLK
clock => distanciaA[19].CLK
clock => distanciaA[20].CLK
clock => distanciaA[21].CLK
clock => distanciaA[22].CLK
clock => distanciaA[23].CLK
clock => distanciaA[24].CLK
clock => distanciaA[25].CLK
clock => distanciaA[26].CLK
clock => distanciaA[27].CLK
clock => distanciaA[28].CLK
clock => distanciaA[29].CLK
clock => distanciaA[30].CLK
clock => distanciaA[31].CLK
clock => sentido_call[0].CLK
clock => sentido_call[1].CLK
clock => andar_call[0].CLK
clock => andar_call[1].CLK
clock => andar_call[2].CLK
clock => andar_call[3].CLK
clock => current_call_index[0].CLK
clock => current_call_index[1].CLK
clock => current_call_index[2].CLK
clock => current_call_index[3].CLK
clock => current_call_index[4].CLK
clock => current_call_index[5].CLK
clock => current_call_index[6].CLK
clock => current_call_index[7].CLK
clock => current_call_index[8].CLK
clock => current_call_index[9].CLK
clock => current_call_index[10].CLK
clock => current_call_index[11].CLK
clock => current_call_index[12].CLK
clock => current_call_index[13].CLK
clock => current_call_index[14].CLK
clock => current_call_index[15].CLK
clock => current_call_index[16].CLK
clock => current_call_index[17].CLK
clock => current_call_index[18].CLK
clock => current_call_index[19].CLK
clock => current_call_index[20].CLK
clock => current_call_index[21].CLK
clock => current_call_index[22].CLK
clock => current_call_index[23].CLK
clock => current_call_index[24].CLK
clock => current_call_index[25].CLK
clock => current_call_index[26].CLK
clock => current_call_index[27].CLK
clock => current_call_index[28].CLK
clock => current_call_index[29].CLK
clock => current_call_index[30].CLK
clock => current_call_index[31].CLK
clock => d_botoes7.CLK
clock => d_botoes6.CLK
clock => d_botoes5.CLK
clock => d_botoes4.CLK
clock => d_botoes3.CLK
clock => d_botoes2.CLK
clock => d_botoes1.CLK
clock => d_botoes0.CLK
clock => dispB.CLK
clock => dispA.CLK
clock => be5B~reg0.CLK
clock => be4B~reg0.CLK
clock => be3B~reg0.CLK
clock => be2B~reg0.CLK
clock => be1B~reg0.CLK
clock => be5A~reg0.CLK
clock => be4A~reg0.CLK
clock => be3A~reg0.CLK
clock => be2A~reg0.CLK
clock => be1A~reg0.CLK
clock => elev_slc~2.DATAIN
clock => sub_verifica~6.DATAIN
clock => control~6.DATAIN
noStopA => always0.IN0
noStopA => Selector2.IN1
noStopB => always0.IN1
noStopB => Selector3.IN1
be1Up => l1Up~reg0.CLK
be1Up => chamadas[0].ativa.CLK
be2Up => l2Up~reg0.CLK
be2Up => chamadas[1].ativa.CLK
be2Down => l2Down~reg0.CLK
be2Down => chamadas[2].ativa.CLK
be3Up => l3Up~reg0.CLK
be3Up => chamadas[3].ativa.CLK
be3Down => l3Down~reg0.CLK
be3Down => chamadas[4].ativa.CLK
be4Up => l4Up~reg0.CLK
be4Up => chamadas[5].ativa.CLK
be4Down => l4Down~reg0.CLK
be4Down => chamadas[6].ativa.CLK
be5Down => l5Down~reg0.CLK
be5Down => chamadas[7].ativa.CLK
s1A => Decoder0.IN0
s2A => Decoder0.IN1
s3A => Decoder0.IN2
s4A => Decoder0.IN3
s5A => Decoder0.IN4
s1B => Decoder1.IN0
s2B => Decoder1.IN1
s3B => Decoder1.IN2
s4B => Decoder1.IN3
s5B => Decoder1.IN4
sentidoMotorA[0] => Equal1.IN1
sentidoMotorA[0] => Equal2.IN3
sentidoMotorA[0] => Equal3.IN3
sentidoMotorA[0] => Equal4.IN3
sentidoMotorA[0] => Equal54.IN1
sentidoMotorA[0] => Equal55.IN1
sentidoMotorA[0] => Equal56.IN0
sentidoMotorA[1] => Equal1.IN0
sentidoMotorA[1] => Equal2.IN2
sentidoMotorA[1] => Equal3.IN2
sentidoMotorA[1] => Equal4.IN2
sentidoMotorA[1] => Equal54.IN0
sentidoMotorA[1] => Equal55.IN0
sentidoMotorA[1] => Equal56.IN1
sentidoMotorB[0] => Equal5.IN1
sentidoMotorB[0] => Equal6.IN3
sentidoMotorB[0] => Equal7.IN3
sentidoMotorB[0] => Equal8.IN3
sentidoMotorB[0] => Equal57.IN1
sentidoMotorB[0] => Equal58.IN1
sentidoMotorB[0] => Equal59.IN0
sentidoMotorB[1] => Equal5.IN0
sentidoMotorB[1] => Equal6.IN2
sentidoMotorB[1] => Equal7.IN2
sentidoMotorB[1] => Equal8.IN2
sentidoMotorB[1] => Equal57.IN0
sentidoMotorB[1] => Equal58.IN0
sentidoMotorB[1] => Equal59.IN1
alertaInA => always0.IN0
alertaInA => Selector2.IN0
alertaInB => always0.IN1
alertaInB => Selector3.IN0
l1Up <= l1Up~reg0.DB_MAX_OUTPUT_PORT_TYPE
l2Up <= l2Up~reg0.DB_MAX_OUTPUT_PORT_TYPE
l2Down <= l2Down~reg0.DB_MAX_OUTPUT_PORT_TYPE
l3Up <= l3Up~reg0.DB_MAX_OUTPUT_PORT_TYPE
l3Down <= l3Down~reg0.DB_MAX_OUTPUT_PORT_TYPE
l4Up <= l4Up~reg0.DB_MAX_OUTPUT_PORT_TYPE
l4Down <= l4Down~reg0.DB_MAX_OUTPUT_PORT_TYPE
l5Down <= l5Down~reg0.DB_MAX_OUTPUT_PORT_TYPE
displayInternoA[0] <= displayInternoA[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
displayInternoA[1] <= displayInternoA[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
displayInternoA[2] <= displayInternoA[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
displayInternoA[3] <= displayInternoA[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
displayInternoA[4] <= displayInternoA[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
displayInternoA[5] <= displayInternoA[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
displayInternoA[6] <= displayInternoA[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
displayInternoB[0] <= displayInternoB[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
displayInternoB[1] <= displayInternoB[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
displayInternoB[2] <= displayInternoB[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
displayInternoB[3] <= displayInternoB[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
displayInternoB[4] <= displayInternoB[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
displayInternoB[5] <= displayInternoB[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
displayInternoB[6] <= displayInternoB[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
alertaOutA <= alertaOutA~reg0.DB_MAX_OUTPUT_PORT_TYPE
alertaOutB <= alertaOutB~reg0.DB_MAX_OUTPUT_PORT_TYPE
be1A <= be1A~reg0.DB_MAX_OUTPUT_PORT_TYPE
be2A <= be2A~reg0.DB_MAX_OUTPUT_PORT_TYPE
be3A <= be3A~reg0.DB_MAX_OUTPUT_PORT_TYPE
be4A <= be4A~reg0.DB_MAX_OUTPUT_PORT_TYPE
be5A <= be5A~reg0.DB_MAX_OUTPUT_PORT_TYPE
be1B <= be1B~reg0.DB_MAX_OUTPUT_PORT_TYPE
be2B <= be2B~reg0.DB_MAX_OUTPUT_PORT_TYPE
be3B <= be3B~reg0.DB_MAX_OUTPUT_PORT_TYPE
be4B <= be4B~reg0.DB_MAX_OUTPUT_PORT_TYPE
be5B <= be5B~reg0.DB_MAX_OUTPUT_PORT_TYPE


|DE1_SOC_golden_top|seq_pavimento:pavimentosA
clk => s5~reg0.CLK
clk => s4~reg0.CLK
clk => s3~reg0.CLK
clk => s2~reg0.CLK
clk => s1~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => pavimento[0].CLK
clk => pavimento[1].CLK
clk => pavimento[2].CLK
clk => pavimento[3].CLK
clk => pavimento[4].CLK
clk => pavimento[5].CLK
clk => pavimento[6].CLK
clk => pavimento[7].CLK
clk => pavimento[8].CLK
clk => pavimento[9].CLK
clk => pavimento[10].CLK
clk => pavimento[11].CLK
clk => pavimento[12].CLK
clk => pavimento[13].CLK
clk => pavimento[14].CLK
clk => pavimento[15].CLK
clk => pavimento[16].CLK
clk => pavimento[17].CLK
clk => pavimento[18].CLK
clk => pavimento[19].CLK
clk => pavimento[20].CLK
clk => pavimento[21].CLK
clk => pavimento[22].CLK
clk => pavimento[23].CLK
clk => pavimento[24].CLK
clk => pavimento[25].CLK
clk => pavimento[26].CLK
clk => pavimento[27].CLK
clk => pavimento[28].CLK
clk => pavimento[29].CLK
clk => pavimento[30].CLK
clk => pavimento[31].CLK
rst => s5~reg0.ACLR
rst => s4~reg0.ACLR
rst => s3~reg0.ACLR
rst => s2~reg0.ACLR
rst => s1~reg0.PRESET
rst => count[0].ACLR
rst => count[1].ACLR
rst => count[2].ACLR
rst => count[3].ACLR
rst => count[4].ACLR
rst => count[5].ACLR
rst => count[6].ACLR
rst => count[7].ACLR
rst => count[8].ACLR
rst => count[9].ACLR
rst => count[10].ACLR
rst => count[11].ACLR
rst => count[12].ACLR
rst => count[13].ACLR
rst => count[14].ACLR
rst => count[15].ACLR
rst => count[16].ACLR
rst => count[17].ACLR
rst => count[18].ACLR
rst => count[19].ACLR
rst => count[20].ACLR
rst => count[21].ACLR
rst => count[22].ACLR
rst => count[23].ACLR
rst => count[24].ACLR
rst => count[25].ACLR
rst => count[26].ACLR
rst => count[27].ACLR
rst => count[28].ACLR
rst => count[29].ACLR
rst => count[30].ACLR
rst => count[31].ACLR
rst => pavimento[0].PRESET
rst => pavimento[1].ACLR
rst => pavimento[2].ACLR
rst => pavimento[3].ACLR
rst => pavimento[4].ACLR
rst => pavimento[5].ACLR
rst => pavimento[6].ACLR
rst => pavimento[7].ACLR
rst => pavimento[8].ACLR
rst => pavimento[9].ACLR
rst => pavimento[10].ACLR
rst => pavimento[11].ACLR
rst => pavimento[12].ACLR
rst => pavimento[13].ACLR
rst => pavimento[14].ACLR
rst => pavimento[15].ACLR
rst => pavimento[16].ACLR
rst => pavimento[17].ACLR
rst => pavimento[18].ACLR
rst => pavimento[19].ACLR
rst => pavimento[20].ACLR
rst => pavimento[21].ACLR
rst => pavimento[22].ACLR
rst => pavimento[23].ACLR
rst => pavimento[24].ACLR
rst => pavimento[25].ACLR
rst => pavimento[26].ACLR
rst => pavimento[27].ACLR
rst => pavimento[28].ACLR
rst => pavimento[29].ACLR
rst => pavimento[30].ACLR
rst => pavimento[31].ACLR
motor[0] => Equal0.IN1
motor[0] => Equal1.IN1
motor[0] => Equal2.IN0
motor[1] => Equal0.IN0
motor[1] => Equal1.IN0
motor[1] => Equal2.IN1
s1 <= s1~reg0.DB_MAX_OUTPUT_PORT_TYPE
s2 <= s2~reg0.DB_MAX_OUTPUT_PORT_TYPE
s3 <= s3~reg0.DB_MAX_OUTPUT_PORT_TYPE
s4 <= s4~reg0.DB_MAX_OUTPUT_PORT_TYPE
s5 <= s5~reg0.DB_MAX_OUTPUT_PORT_TYPE


|DE1_SOC_golden_top|seq_pavimento:pavimentosB
clk => s5~reg0.CLK
clk => s4~reg0.CLK
clk => s3~reg0.CLK
clk => s2~reg0.CLK
clk => s1~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => pavimento[0].CLK
clk => pavimento[1].CLK
clk => pavimento[2].CLK
clk => pavimento[3].CLK
clk => pavimento[4].CLK
clk => pavimento[5].CLK
clk => pavimento[6].CLK
clk => pavimento[7].CLK
clk => pavimento[8].CLK
clk => pavimento[9].CLK
clk => pavimento[10].CLK
clk => pavimento[11].CLK
clk => pavimento[12].CLK
clk => pavimento[13].CLK
clk => pavimento[14].CLK
clk => pavimento[15].CLK
clk => pavimento[16].CLK
clk => pavimento[17].CLK
clk => pavimento[18].CLK
clk => pavimento[19].CLK
clk => pavimento[20].CLK
clk => pavimento[21].CLK
clk => pavimento[22].CLK
clk => pavimento[23].CLK
clk => pavimento[24].CLK
clk => pavimento[25].CLK
clk => pavimento[26].CLK
clk => pavimento[27].CLK
clk => pavimento[28].CLK
clk => pavimento[29].CLK
clk => pavimento[30].CLK
clk => pavimento[31].CLK
rst => s5~reg0.ACLR
rst => s4~reg0.ACLR
rst => s3~reg0.ACLR
rst => s2~reg0.ACLR
rst => s1~reg0.PRESET
rst => count[0].ACLR
rst => count[1].ACLR
rst => count[2].ACLR
rst => count[3].ACLR
rst => count[4].ACLR
rst => count[5].ACLR
rst => count[6].ACLR
rst => count[7].ACLR
rst => count[8].ACLR
rst => count[9].ACLR
rst => count[10].ACLR
rst => count[11].ACLR
rst => count[12].ACLR
rst => count[13].ACLR
rst => count[14].ACLR
rst => count[15].ACLR
rst => count[16].ACLR
rst => count[17].ACLR
rst => count[18].ACLR
rst => count[19].ACLR
rst => count[20].ACLR
rst => count[21].ACLR
rst => count[22].ACLR
rst => count[23].ACLR
rst => count[24].ACLR
rst => count[25].ACLR
rst => count[26].ACLR
rst => count[27].ACLR
rst => count[28].ACLR
rst => count[29].ACLR
rst => count[30].ACLR
rst => count[31].ACLR
rst => pavimento[0].PRESET
rst => pavimento[1].ACLR
rst => pavimento[2].ACLR
rst => pavimento[3].ACLR
rst => pavimento[4].ACLR
rst => pavimento[5].ACLR
rst => pavimento[6].ACLR
rst => pavimento[7].ACLR
rst => pavimento[8].ACLR
rst => pavimento[9].ACLR
rst => pavimento[10].ACLR
rst => pavimento[11].ACLR
rst => pavimento[12].ACLR
rst => pavimento[13].ACLR
rst => pavimento[14].ACLR
rst => pavimento[15].ACLR
rst => pavimento[16].ACLR
rst => pavimento[17].ACLR
rst => pavimento[18].ACLR
rst => pavimento[19].ACLR
rst => pavimento[20].ACLR
rst => pavimento[21].ACLR
rst => pavimento[22].ACLR
rst => pavimento[23].ACLR
rst => pavimento[24].ACLR
rst => pavimento[25].ACLR
rst => pavimento[26].ACLR
rst => pavimento[27].ACLR
rst => pavimento[28].ACLR
rst => pavimento[29].ACLR
rst => pavimento[30].ACLR
rst => pavimento[31].ACLR
motor[0] => Equal0.IN1
motor[0] => Equal1.IN1
motor[0] => Equal2.IN0
motor[1] => Equal0.IN0
motor[1] => Equal1.IN0
motor[1] => Equal2.IN1
s1 <= s1~reg0.DB_MAX_OUTPUT_PORT_TYPE
s2 <= s2~reg0.DB_MAX_OUTPUT_PORT_TYPE
s3 <= s3~reg0.DB_MAX_OUTPUT_PORT_TYPE
s4 <= s4~reg0.DB_MAX_OUTPUT_PORT_TYPE
s5 <= s5~reg0.DB_MAX_OUTPUT_PORT_TYPE


